The ``2-matrix_divided`` module
=====================================
Using the ``matrix_divided`` function
=====================================

This is a test file in reStructedText format. First import
``matrix_divided`` from the ``2-matrix_divided`` module

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Then use:

matrix_divided takes a matrix and divisor as an input
then returns a new matrix with all elements divided by divisor.

Test Cases:
===========
>>> matrix_divided([[2, 4, 6]], 2)
[[1.0, 2.0, 3.0]]

>>> matrix_divided([[1, 3, 44]], "helo")
Traceback (most recent call last):
	...
TypeError: div must be a number

>>> matrix_divided([[4, 5, 6]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

>>> matrix_divided([[2, "3", 0]], 1)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2], [2, 3]], 4)
Traceback (most recent call last):
	'''
TypeError: Each row of the matrix must have the same size
